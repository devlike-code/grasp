ASTNode { id: "0x2580ffe1f88", kind: "FunctionDecl", loc: Some(ASTCaret { offset: Some(83), line: Some(9), col: Some(5), tok_len: Some(4), file: Some("\\\\?\\C:\\Projects\\armstrong.cpp") }), range: Some(ASTRange { begin: ASTCaret { offset: Some(79), line: None, col: Some(1), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(202), line: Some(19), col: Some(1), tok_len: Some(1), file: None } }), is_used: false, name: "main", typ: ASTType { desugared_qual_type: "", qual_type: "int ()" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffec9e0", kind: "CompoundStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(91), line: Some(10), col: Some(1), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(202), line: Some(19), col: Some(1), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffe20d8", kind: "DeclStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(98), line: Some(11), col: Some(5), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(112), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffe2048", kind: "VarDecl", loc: Some(ASTCaret { offset: Some(102), line: None, col: Some(9), tok_len: Some(6), file: None }), range: Some(ASTRange { begin: ASTCaret { offset: Some(98), line: None, col: Some(5), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(111), line: None, col: Some(18), tok_len: Some(1), file: None } }), is_used: true, name: "result", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "c", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffe20b0", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(111), line: None, col: Some(18), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(111), line: None, col: Some(18), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("5"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x2580ffec988", kind: "IfStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(121), line: Some(13), col: Some(5), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(182), line: Some(16), col: Some(5), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffe2150", kind: "BinaryOperator", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(125), line: Some(13), col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(135), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "bool" }, init: "", value_category: "prvalue", value: Null, opcode: Some("=="), cast_kind: "", inner: [ASTNode { id: "0x2580ffe2138", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(125), line: None, col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(125), line: None, col: Some(9), tok_len: Some(6), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "LValueToRValue", inner: [ASTNode { id: "0x2580ffe20f0", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(125), line: None, col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(125), line: None, col: Some(9), tok_len: Some(6), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x2580ffe2048", kind: "VarDecl", loc: None, range: None, is_used: false, name: "result", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }, ASTNode { id: "0x2580ffe2110", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(135), line: None, col: Some(19), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(135), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("5"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x2580ffec970", kind: "CompoundStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(143), line: Some(14), col: Some(5), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(182), line: Some(16), col: Some(5), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffec7a0", kind: "CXXOperatorCallExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(154), line: Some(15), col: Some(9), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(167), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "basic_ostream<char, char_traits<char>>" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffec788", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(164), line: None, col: Some(19), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(164), line: None, col: Some(19), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(*)(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "FunctionToPointerDecay", inner: [ASTNode { id: "0x2580ffec710", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(164), line: None, col: Some(19), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(164), line: None, col: Some(19), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x2580ffe2c78", kind: "FunctionDecl", loc: None, range: None, is_used: false, name: "operator<<", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }, ASTNode { id: "0x2580ffe21d8", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(154), line: None, col: Some(9), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(159), line: None, col: Some(14), tok_len: Some(4), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "ostream" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x2580ffe0e40", kind: "VarDecl", loc: None, range: None, is_used: false, name: "cout", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "ostream" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }, ASTNode { id: "0x2580ffec6f8", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(167), line: None, col: Some(22), tok_len: Some(8), file: None }, end: ASTCaret { offset: Some(167), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "const char *" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "ArrayToPointerDecay", inner: [ASTNode { id: "0x2580ffe2208", kind: "StringLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(167), line: None, col: Some(22), tok_len: Some(8), file: None }, end: ASTCaret { offset: Some(167), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "const char[7]" }, init: "", value_category: "lvalue", value: String("\"QWEQWE\""), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x2580ffec9d0", kind: "ReturnStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(191), line: Some(18), col: Some(5), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(198), line: None, col: Some(12), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x2580ffec9a8", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(198), line: None, col: Some(12), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(198), line: None, col: Some(12), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("0"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }], ref_decl: None }