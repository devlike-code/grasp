ASTNode { id: "0x23acf8c78d8", kind: "FunctionDecl", loc: Some(ASTCaret { offset: Some(49), line: Some(4), col: Some(5), tok_len: Some(4), file: Some("\\\\?\\C:\\Projects\\armstrong.cpp") }), range: Some(ASTRange { begin: ASTCaret { offset: Some(45), line: None, col: Some(1), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(181), line: Some(14), col: Some(1), tok_len: Some(1), file: None } }), is_used: false, name: "main", typ: ASTType { desugared_qual_type: "", qual_type: "int ()" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8d9ec8", kind: "CompoundStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(57), line: Some(5), col: Some(1), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(181), line: Some(14), col: Some(1), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8c7a28", kind: "DeclStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(64), line: Some(6), col: Some(5), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(78), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8c7998", kind: "VarDecl", loc: Some(ASTCaret { offset: Some(68), line: None, col: Some(9), tok_len: Some(6), file: None }), range: Some(ASTRange { begin: ASTCaret { offset: Some(64), line: None, col: Some(5), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(77), line: None, col: Some(18), tok_len: Some(1), file: None } }), is_used: true, name: "result", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "c", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8c7a00", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(77), line: None, col: Some(18), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(77), line: None, col: Some(18), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("5"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x23acf8d9e70", kind: "IfStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(87), line: Some(8), col: Some(5), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(161), line: Some(11), col: Some(5), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8c7aa0", kind: "BinaryOperator", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(91), line: Some(8), col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(101), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "bool" }, init: "", value_category: "prvalue", value: Null, opcode: Some("=="), cast_kind: "", inner: [ASTNode { id: "0x23acf8c7a88", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(91), line: None, col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(91), line: None, col: Some(9), tok_len: Some(6), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "LValueToRValue", inner: [ASTNode { id: "0x23acf8c7a40", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(91), line: None, col: Some(9), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(91), line: None, col: Some(9), tok_len: Some(6), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x23acf8c7998", kind: "VarDecl", loc: None, range: None, is_used: false, name: "result", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }, ASTNode { id: "0x23acf8c7a60", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(101), line: None, col: Some(19), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(101), line: None, col: Some(19), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("5"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x23acf8d9e58", kind: "CompoundStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(109), line: Some(9), col: Some(5), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(161), line: Some(11), col: Some(5), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8d9df0", kind: "CXXOperatorCallExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(120), line: Some(10), col: Some(9), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(150), line: None, col: Some(39), tok_len: Some(4), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "basic_ostream<char>" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8d9dd8", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(142), line: None, col: Some(31), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(142), line: None, col: Some(31), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char> &(*)(basic_ostream<char> &(*)(basic_ostream<char> &) __attribute__((cdecl)))" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "FunctionToPointerDecay", inner: [ASTNode { id: "0x23acf8d9d58", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(142), line: None, col: Some(31), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(142), line: None, col: Some(31), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char> &(basic_ostream<char> &(*)(basic_ostream<char> &) __attribute__((cdecl)))" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x23acf8cf300", kind: "CXXMethodDecl", loc: None, range: None, is_used: false, name: "operator<<", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char> &(basic_ostream<char> &(*)(basic_ostream<char> &) __attribute__((cdecl)))" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }, ASTNode { id: "0x23acf8d20f0", kind: "CXXOperatorCallExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(120), line: None, col: Some(9), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(133), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "basic_ostream<char, char_traits<char>>" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8d20d8", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(130), line: None, col: Some(19), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(130), line: None, col: Some(19), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(*)(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "FunctionToPointerDecay", inner: [ASTNode { id: "0x23acf8d2060", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(130), line: None, col: Some(19), tok_len: Some(2), file: None }, end: ASTCaret { offset: Some(130), line: None, col: Some(19), tok_len: Some(2), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x23acf8c85c8", kind: "FunctionDecl", loc: None, range: None, is_used: false, name: "operator<<", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &, const char *)" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }, ASTNode { id: "0x23acf8c7b28", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(120), line: None, col: Some(9), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(125), line: None, col: Some(14), tok_len: Some(4), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "ostream" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x23acf8c68b0", kind: "VarDecl", loc: None, range: None, is_used: false, name: "cout", typ: ASTType { desugared_qual_type: "std::basic_ostream<char>", qual_type: "ostream" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }, ASTNode { id: "0x23acf8d2048", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(133), line: None, col: Some(22), tok_len: Some(8), file: None }, end: ASTCaret { offset: Some(133), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "const char *" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "ArrayToPointerDecay", inner: [ASTNode { id: "0x23acf8c7b58", kind: "StringLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(133), line: None, col: Some(22), tok_len: Some(8), file: None }, end: ASTCaret { offset: Some(133), line: None, col: Some(22), tok_len: Some(8), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "const char[7]" }, init: "", value_category: "lvalue", value: String("\"QWEQWE\""), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x23acf8d9d40", kind: "ImplicitCastExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(145), line: None, col: Some(34), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(150), line: None, col: Some(39), tok_len: Some(4), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "basic_ostream<char, char_traits<char>> &(*)(basic_ostream<char, char_traits<char>> &) __attribute__((cdecl))" }, init: "", value_category: "prvalue", value: Null, opcode: None, cast_kind: "FunctionToPointerDecay", inner: [ASTNode { id: "0x23acf8d9d08", kind: "DeclRefExpr", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(145), line: None, col: Some(34), tok_len: Some(3), file: None }, end: ASTCaret { offset: Some(150), line: None, col: Some(39), tok_len: Some(4), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &)", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &) __attribute__((cdecl))" }, init: "", value_category: "lvalue", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: Some(ASTNode { id: "0x23acf8d9780", kind: "FunctionDecl", loc: None, range: None, is_used: false, name: "endl", typ: ASTType { desugared_qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &)", qual_type: "basic_ostream<char, char_traits<char>> &(basic_ostream<char, char_traits<char>> &) __attribute__((cdecl))" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [], ref_decl: None }) }], ref_decl: None }], ref_decl: None }], ref_decl: None }], ref_decl: None }, ASTNode { id: "0x23acf8d9eb8", kind: "ReturnStmt", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(170), line: Some(13), col: Some(5), tok_len: Some(6), file: None }, end: ASTCaret { offset: Some(177), line: None, col: Some(12), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "" }, init: "", value_category: "", value: Null, opcode: None, cast_kind: "", inner: [ASTNode { id: "0x23acf8d9e90", kind: "IntegerLiteral", loc: None, range: Some(ASTRange { begin: ASTCaret { offset: Some(177), line: None, col: Some(12), tok_len: Some(1), file: None }, end: ASTCaret { offset: Some(177), line: None, col: Some(12), tok_len: Some(1), file: None } }), is_used: false, name: "", typ: ASTType { desugared_qual_type: "", qual_type: "int" }, init: "", value_category: "prvalue", value: String("0"), opcode: None, cast_kind: "", inner: [], ref_decl: None }], ref_decl: None }], ref_decl: None }], ref_decl: None }