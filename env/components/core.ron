[
    ComponentCategory(
        name: "Core",
        display: "Core",
        hidden: true,
        components: [
            "void: unit;",
            "Error: { message: str, target: u64, window: u64 };",
            "ComponentEntry: { name: s32, definition: str };",
            "ComponentCategory: { name: s32, hidden: bool };",
        ]
    ),

    ComponentCategory(
        name: "Core.Editor",
        display: "Core.Editor",
        hidden: true,
        components: [
            "Node: unit;",
            "Arrow: unit;",
            "InProgress: unit;",
            "EditorState: unit;",
            "Label: str;",
            "Position: { x: f32, y: f32 };",
            "Offset: { x: f32, y: f32 };",
            "SelfLoop: f32;",
            "Transformer: s32;",
            "Pick1: unit;",
            "Pick2: unit;",
            "Pick3: unit;",
            "Pick4: unit;",
            "Pick5: unit;",
            "Dot: str;",
        ]
   ),

    ComponentCategory(
        name: "Core.Editor.Queues",
        display: "Core.Editor.Queues",
        hidden: true,
        components: [
            "WindowTransformerQueue: unit;",
            "NewWindowRequestQueue: unit;",
            "QuadtreeUpdateRequestQueue: unit;",
            "EditorWindowQueue: unit;",
            "CloseWindowRequestQueue: unit;",
            "NamedFocusWindowRequestQueue: unit;",
            "WindowRenameRequestQueue: unit;",
            "WindowTileDeleteReactionRequestQueue: unit;",
        ]
    ),

    ComponentCategory(
        name: "Core.Editor.Requests",
        display: "Core.Editor.Requests",
        hidden: true,
        components: [
            "CloseWindowRequest: unit;",
            "DirectWindowRequest: unit;",
            "FocusWindowRequest: unit;",
            "QuadtreeUpdateRequest: unit;",           
            "NamedFocusWindowRequest: str;",
            "WindowRenameRequest: { id: u64, index: u64, name: s32 };",
            "WindowTransformerRequest: { transform: s32, window_index: u64 };",
            "WindowTileDeleteReactionRequest: { window: u64, tile: u64, component: s32 };",
        ]
    ),

    ComponentCategory(
        name: "Core.Selection",
        display: "Selection",
        hidden: false,
        components: [
            "Selection: u64;",
            "Selected: u64;",
            "SelectionOwner: unit;",
            "Rectangle: { x: f32, y: f32, width: f32, height: f32 };",
        ]
    ),

    ComponentCategory(
        name: "Core.Queue",
        display: "Queue",
        hidden: false,
        components: [
            "Queue: unit;",
            "Enqueued: unit;",
            "QueueSentinel: unit;",
            "ToQueueSentinel: unit;",
        ]
    ),

    ComponentCategory(
        name: "Core.Tuple",
        display: "Tuple",
        hidden: false,
        components: [
            "Tuple: unit;",
            "TupleOwner: unit;",
            "TupleFirst: unit;",
            "TupleSecond: unit;",
        ]
    ),

    ComponentCategory(
        name: "Core.Validation",
        display: "Validation",
        hidden: false,
        components: [
            "HasComponent: s32;",
            "NonEmptyLabel: unit;",
            "NoArrowsInto: unit;",
            "NoArrowsFrom: unit;",
        ]
    ),

    ComponentCategory(
        name: "Core.Procedures",
        display: "Procedures",
        hidden: false,
        components: [
            "Procedure: str;",
            "ProcedureArgument: { name: s32, value: u64 };",
            "ProcedureResult: unit;",
        ]
    ),

    ComponentCategory(
        name: "Core.PatternMatching",
        display: "Pattern Matching",
        hidden: false,
        components: [
            "PatternMatch: unit;",
            "PatternMatchElement: u64;",
            "PatternMatchCandidate: s32;",
            "PatternMatchBinding: s32;",
            "PatternMatchShow: { choice: u64 };",
        ]
    ),

    ComponentCategory(
        name: "Core.Data",
        display: "Data Structures",
        hidden: false,
        components: [
            "List: unit;",
            "ListElement: u64;",
            "ListMember: u64;",
            "Pair: { first: u64, second: u64 };",
            "PairElement: u64;",
        ]
    ),

    ComponentCategory(
        name: "Core.Flourish",
        display: "Flourish",
        hidden: false,
        components: [
            "Color: { r: f32, g: f32, b: f32, a: f32 };",
        ]
    ),

    ComponentCategory(
        name: "FiniteState",
        display: "Finite State",
        hidden: false,
        components: [
            "FSM: s32;",
            "OutputDir: s32;",
        ]
    )
]